services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  machine-learning-client:
    build: ./machine-learning-client
    container_name: machine-learning-client
    depends_on:
      - mongodb
    volumes:
      - ./machine-learning-client:/app  # Mount code so app.py changes are live
    ports:
      - "8000:8000"  # Expose Flask API to host machine
    restart: unless-stopped
    command: python app.py  # Run app.py in background when container starts

  web:
    build: ./web-app
    container_name: web-app
    ports:
      - "3001:3001"
    volumes:
      - ./web-app:/app
    depends_on:
      - mongodb
      - machine-learning-client
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    restart: unless-stopped
    
  web-tests:
    build: ./web-app
    depends_on:
      - mongodb
    command: ["pytest", "tests/"]
    volumes:
      - ./web-app:/app

#  ml-tests:
#    build: ./machine-learning-client
#    depends_on:
#      - mongodb
#    command: ["pytest", "tests/"]
#    volumes:
#      - ./machine-learning-client:/app


volumes:
  mongo-data: